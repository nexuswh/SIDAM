#pragma TextEncoding="UTF-8"
#pragma rtGlobals=3
#pragma moduleName=SIDAMStartExit

#ifndef SIDAMshowProc
#pragma hide = 1
#endif

#include "SIDAM_Config"
#include "SIDAM_Constants"
#include "SIDAM_Utilities_misc"

//******************************************************************************
//	Start SIDAM
//******************************************************************************
Function SIDAMStart()
	printf "\r SIDAM %d.%d.%d\r", SIDAM_VERSION_MAJOR, SIDAM_VERSION_MINOR, SIDAM_VERSION_PATCH

	//	Construct SIDAM_Procedures.ipf and complie
	createProcFile()
	Execute/P "INSERTINCLUDE \"" + SIDAM_FILE_INCLUDE + "\""
	Execute/P "COMPILEPROCEDURES "
	
	SetIgorHook BeforeFileOpenHook = SIDAMFileOpenHook
	SetIgorHook BeforeExperimentSaveHook = SIDAMBeforeExperimentSaveHook
	SetIgorHook AfterCompiledHook = SIDAMAfterCompiledHook
End

Function SIDAMSource()
	//	Unless SIDAM_dummy, which does not exist, is inserted and deleted,
	//	the compile somehow does not start.
	Execute/P/Q/Z "INSERTINCLUDE \"SIDAM_dummy\""	
	Execute/P/Q "SIDAMStartExit#createProcFile()"
	Execute/P/Q/Z "DELETEINCLUDE \"SIDAM_dummy\""	
	Execute/P "COMPILEPROCEDURES "
End

Static Function createProcFile()
	//	Make a list of ipf files
	Make/T/FREE lw = {"SIDAM_Menus.ipf", "SIDAM_Constants.ipf", "SIDAM_Hook.ipf"}
	int i
	for (i = 0; i < ItemsInList(SIDAM_FOLDER_ADDTIONAL); i++)
		Wave/T w1 = ipfList(StringFromList(i, SIDAM_FOLDER_ADDTIONAL))
		Concatenate/NP/T/FREE {w1}, lw
	endfor
	
	// Open SIDAM_Procedures.ipf
	Variable refNum
	String pathStr = SpecialDirPath("Igor Pro User Files", 0, 0, 0) + "User Procedures:"
	String pathName = UniqueName("path",12,0)
	NewPath/Q $pathName, pathStr
	Open/P=$pathName/Z refNum, as SIDAM_FILE_INCLUDE+".ipf"
	KillPath $pathName
	if (V_flag)
		return 0
	endif
	
	//	write the hide pragma
	fprintf refNum, "//This file was automatically generated by SIDAM.\r"
	fprintf refNum, "#ifndef SIDAMshowProc\r#pragma hide = 1\r#endif\r"
	//	write #include ...
	for(i = 0; i < numpnts(lw); i++)
		fprintf refNum, "#include \"%s\"\r", RemoveEnding(lw[i],".ipf")
	endfor
	//	write configurations
	SIDAMConfigToProc(refNum)
	
	Close refNum
End

//	make a list of ipf files under subFolder
Static Function/WAVE ipfList(String subFolder)

	String pathName = UniqueName("tmpPath",12,0)
	NewPath/O/Q/Z $pathName, SIDAMPath()+subFolder

	String listStr = IndexedFile($pathName,-1,".ipf") + IndexedFile($pathName,-1,".lnk")
	Make/FREE/T/N=(ItemsInList(listStr)) w = RemoveEnding(StringFromList(p,listStr),".lnk")

	String dirListStr = IndexedDir($pathName,-1,0)
	int i, n = ItemsInList(dirListStr)
	for (i = 0; i < n; i++)
		Concatenate/T {ipfList(subFolder+":"+StringFromList(i,dirListStr))}, w
	endfor

	KillPath $pathName

	return w
End


//******************************************************************************
//	Exit SIDAM
//******************************************************************************
Function sidamExit()
	SetIgorHook/K BeforeFileOpenHook = SIDAMFileOpenHook
	SetIgorHook/K AfterCompiledHook = SIDAMAfterCompiledHook
	SetIgorHook/K BeforeExperimentSaveHook = SIDAMBeforeExperimentSaveHook
	Execute/P/Q/Z "DELETEINCLUDE \""+SIDAM_FILE_INCLUDE+"\""
	Execute/P/Q/Z "SetIgorOption poundUndefine=SIDAMshowProc"
	Execute/P/Q/Z "COMPILEPROCEDURES "
	Execute/P/Q/Z "BuildMenu \"All\""
	KillPath/Z KMMain
End
